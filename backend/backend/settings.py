"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Email stuff
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = os.getenv(
    "EMAIL_HOST", os.environ.get("EMAIL_HOST")
)  # E.g., for Gmail, it's 'smtp.gmail.com'
EMAIL_PORT = 587  # Port for TLS
EMAIL_USE_TLS = True  # Use TLS security
EMAIL_HOST_USER = os.getenv(
    "EMAIL_HOST_USER", os.environ.get("EMAIL_HOST_USER")
)  # Your email address
EMAIL_HOST_PASSWORD = os.getenv(
    "EMAIL_HOST_PASSWORD", os.environ.get("EMAIL_HOST_PASSWORD")
)  # Your email password
OTP_EMAIL_SENDER = EMAIL_HOST_USER
OTP_EMAIL_TOKEN_VALIDITY = 300
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY", os.environ.get("SECRET_KEY"))
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ["backend", "www.silly-borg.cloud", "silly-borg.cloud"]

# User models
# Application definition

INSTALLED_APPS = [
    "django_otp",
    "django_otp.plugins.otp_email",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "api",
    "corsheaders",
    "single_session",
]
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.SessionAuthentication",
        "rest_framework.authentication.BasicAuthentication",
    ],
    "DEFAULT_THROTTLE_CLASSES": [
        "rest_framework.throttling.AnonRateThrottle",
        "rest_framework.throttling.UserRateThrottle",
    ],
    "DEFAULT_THROTTLE_RATES": {"anon": "20/second", "user": "20/second"},
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ],
    "DEFAULT_RENDERER_CLASSES": [
        "rest_framework.renderers.JSONRenderer",
    ],
}
if DEBUG:
    REST_FRAMEWORK["DEFAULT_RENDERER_CLASSES"].append(
        "rest_framework.renderers.BrowsableAPIRenderer"
    )
AUTH_USER_MODEL = "api.GenericUser"

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django_otp.middleware.OTPMiddleware",
]

ROOT_URLCONF = "backend.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "backend.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": os.getenv("DB_NAME", os.environ.get("DB_NAME")),
        "USER": os.getenv("DB_USER_1", os.environ.get("DB_USER_1")),
        "PASSWORD": os.getenv("DB_PASSWORD_1", os.environ.get("DB_PASSWORD_1")),
        "HOST": os.getenv("DB_HOST", os.environ.get("DB_HOST")),
        "PORT": "3306",
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Asia/Singapore"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_ROOT = BASE_DIR / "production_static"
STATIC_URL = "static/"
MEDIA_ROOT = BASE_DIR / "mediafiles"
MEDIA_URL = "/media/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True

CSRF_TRUSTED_ORIGINS = ["https://silly-borg.cloud", "https://www.silly-borg.cloud"]

CORS_ALLOWED_ORIGINS = [
    "https://silly-borg.cloud", "https://www.silly-borg.cloud",
]
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True
SESSION_SAVE_EVERY_REQUEST = True
SESSION_COOKIE_AGE = 1200

SESSION_ENGINE = "django.contrib.sessions.backends.db"
if not DEBUG:
    SECURE_SSL_REDIRECT = False

if not DEBUG:
    LOGGING = {
        "version": 1,
        "disable_existing_loggers": False, 
        "filters": {
            "require_debug_false": {
                "()": "django.utils.log.RequireDebugFalse",
            },
            "require_debug_true": {
                "()": "django.utils.log.RequireDebugTrue",
            },
        },
        "formatters": {
            "simple": {
                "format": "{levelname} {asctime} {message}",
                "style": "{",
                "datefmt": "%Y-%m-%d %H:%M:%S",
            },
            "verbose": {
                "format": "{levelname} {asctime} {name} {module} {funcName} {{'message':'{message}'}}",
                "style": "{",
                "datefmt": "%Y-%m-%d %H:%M:%S",
            },
        },
    "handlers": {
        "console": {
            "level": "INFO",
            "filters": ["require_debug_true"],
            "class": "logging.StreamHandler",
        },
        "djangoFile": {
            "level": "DEBUG",
            "class": "logging.FileHandler",
            "filename": "backend/logs/django/django.log",
            "formatter": "verbose",
        },
        "djangoSecurityFile": {
            "level": "DEBUG",
            "class": "logging.FileHandler",
            "filename": "backend/logs/django/security.log",
            "formatter": "simple",
        },
        "djangoCsrfFile": {
            "level": "DEBUG",
            "class": "logging.FileHandler",
            "filename": "backend/logs/django/csrf.log",
            "formatter": "simple",
        },
        "adminFile": {
            "level": "DEBUG",
            "class": "logging.FileHandler",
            "filename": "backend/logs/app/admin.log",
            "formatter": "simple",
        },
        "authFile": {
            "level": "INFO",
            "class": "logging.FileHandler",
            "filename": "backend/logs/app/auth.log",
            "formatter": "simple",
        },
        "registerFile": {
            "level": "INFO",
            "class": "logging.FileHandler",
            "filename": "backend/logs/app/registration.log",
            "formatter": "simple",
        },
        "generalFile": {
            "level": "INFO",
            "class": "logging.FileHandler",
            "filename": "backend/logs/app/general.log",
            "formatter": "simple",
        },
    },
    "loggers": {
        "django": {
            "handlers": ["djangoFile", "console"],
            "level": "INFO",
            "propagate": False,
        },
        "django.security.*": {
            "handlers": ["djangoSecurityFile"],
            "level": "INFO",
            "propagate": False,
        },
        "django.security.csrf": {
            "handlers": ["djangoCsrfFile"],
            "level": "INFO",
            "propagate": False,
        },
        "backend.api.views.admin": {
            "handlers": ["adminFile"],
            "level": "INFO",
            "propagate": False,
        },
        "backend.api.views.auth": {
            "handlers": ["authFile"],
            "level": "INFO",
            "propagate": False,
        },
        "backend.api.views.register": {
            "handlers": ["registerFile"],
            "level": "INFO",
            "propagate": False,
        },
        "backend.api.views.general": {
            "handlers": ["generalFile"],
            "level": "INFO",
            "propagate": False,
        },
    },
}
