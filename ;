from django.urls import reverse
from rest_framework import status
from rest_framework.test import APITestCase
from api.models.GenericUser import GenericUser

class LoginAPITests(APITestCase):
    @classmethod
    def setUpTestData(cls):
        cls.test_user = GenericUser.objects.create_user(
            username='test@email.com',
            email='test@email.com',
            first_name='John',
            last_name='Doe',
            phoneNum='91234567',
            nric='S1234567D',
            password='test_password',
        )
    def set_temp_id_in_session(self):
        self.client.session['temp_id'] = str(self.test_user.id)
        self.client.session.save()

    def test_login_success(self):
        """
        Ensure we can log in with valid credentials and a session is created.
        """
        url = reverse('auth-login')
        data = {'username': 'test@email.com', 'password': 'test_password'}
        response = self.client.post(url, data, format='json')
        self.assertEqual(response.status_code, status.HTTP_200_OK)
        self.assertIn('temp_id', self.client.session)
        self.assertEqual(str(self.client.session['temp_id']), str(self.test_user.id))

    def test_login_failure(self):
        """ Ensure login fails with invalid credentials and no session is created. """
        url = reverse('auth-login')
        data = {'username': 'test@email.com', 'password': 'wrong_password'}
        response = self.client.post(url, data, format='json')
        self.assertEqual(response.status_code, status.HTTP_401_UNAUTHORIZED)
        self.assertNotIn('temp_id', self.client.session)

    def test_get_otp_success(self):
        # Set the temp_id in session
        self.set_temp_id_in_session()
        url = reverse('auth-get-OTP')
        response = self.client.post(url, {}, format='json')  # No data needed in this case
        self.assertEqual(response.status_code, status.HTTP_200_OK)

